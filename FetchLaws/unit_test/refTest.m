%% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% Author: Una Schneck (schneck.una@gmail.com)
% 
% This code performs unit testing for the ref variables in the umwm model, valid for:
%
%                   windspeeds = 0.4:1:3.3
%                   m = 31                                                                    
%                   n = 15                                                                  
%                   rho_liquid = 465
%                   nu_liquid = 0.0031/1e4
%                   bathy_map = 100.*ones(m,n)
%
%
%--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% External function requirements:
%   (1) none
%--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% Code produces:
%   (1) List of passed/failed tests
%---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% Aprox time to run: < 1 minute 
%---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% ===========================================================================================================================================================================================================================
% ===========================================================================================================================================================================================================================
% location of .mat files for testing
addpath('C:\Users\schne\OneDrive\Desktop\Main\Work\MIT\Github_Repos\umwm_titan\FetchLaws\unit_test\umwm_mat\umwm_old')
addpath('C:\Users\schne\OneDrive\Desktop\Main\Work\MIT\Github_Repos\umwm_titan\FetchLaws\unit_test\umwm_mat\umwm_new')
% ===========================================================================================================================================================================================================================
% -- check that grid size is same 
% ===========================================================================================================================================================================================================================
%% Test: m
% m: number of gridpoints in x-direction 
load('Old_1_ref.mat','m'); om = m;
load('New_Reference.mat','m'); nm = m;
assert(om==nm,'m-dimension for original model has changed. Need to re-run original model for unit testing')
%% Test: n
% n: number of gridpoints in y-direction
load('Old_1_ref.mat','n'); on = n;
load('New_Reference.mat','n'); nn = n;
assert(on==nn,'n-dimension for original model has changed. Need to re-run original model for unit testing')
% ===========================================================================================================================================================================================================================
% -- checking D is the same 
% ===========================================================================================================================================================================================================================
%% Test: D
load('Old_1_ref.mat','D'); oD = D;
load('New_Reference.mat','D'); nD = D;
clearvars D
assert(isequaln(oD,nD),'Depth Test: FAIL')
% ===========================================================================================================================================================================================================================
% -- checking dwn is the same 
% ===========================================================================================================================================================================================================================
%% Test: dwn
load('Old_1_ref.mat','dwn'); odwn = dwn;
load('New_Reference.mat','dwn'); ndwn = dwn;
clearvars dwn
assert(isequaln(odwn,ndwn),'dwn Test: FAIL')
% ===========================================================================================================================================================================================================================
% --- checking if wn is the same  
% ===========================================================================================================================================================================================================================
%% Test: wn
load('Old_1_ref.mat','wn'); own = wn;
load('New_Reference.mat','wn'); nwn = wn;
clearvars wn
assert(isequaln(own,nwn),'wn Test: FAIL')
% ===========================================================================================================================================================================================================================
% -- checking if Cg is the same 
% ===========================================================================================================================================================================================================================
%% Test: Cg
load('Old_1_ref.mat','Cg'); ocg = Cg;
load('New_Reference.mat','Cg'); ncg = Cg;
clearvars Cg
assert(isequaln(ocg,ncg),'Cg Test: FAIL')
% ===========================================================================================================================================================================================================================
% -- checking if c is the same 
% ===========================================================================================================================================================================================================================
%% Test: c
load('Old_1_ref.mat','c'); oc = c;
load('New_Reference.mat','c'); nc = c;
clearvars c
assert(isequaln(oc,nc),'c Test: FAIL')
% ===========================================================================================================================================================================================================================
% -- checking if delx is the same 
% ===========================================================================================================================================================================================================================
%% Test: delx
load('Old_1_ref.mat','delx'); odelx = delx;
load('New_Reference.mat','delx'); ndelx = delx;
clearvars delx
assert(isequaln(odelx,ndelx),'delx Test: FAIL')
% ===========================================================================================================================================================================================================================
% -- checking if dely is the same 
% ===========================================================================================================================================================================================================================
%% Test: dely
load('Old_1_ref.mat','dely'); odely = dely;
load('New_Reference.mat','dely'); ndely = dely;
clearvars dely
assert(isequaln(odely,ndely),'dely Test: FAIL')
% ===========================================================================================================================================================================================================================
% -- check if f is the same 
% ===========================================================================================================================================================================================================================
%% Test: f
load('Old_1_ref.mat','f'); of = f;
load('New_Reference.mat','f'); nf = f;
clearvars f
assert(isequaln(of,nf),'f Test: FAIL')
% ===========================================================================================================================================================================================================================
% -- check if Uei is the same 
% ===========================================================================================================================================================================================================================
%% Test: Uei
load('Old_1_ref.mat','Uei'); oUei = Uei;
load('New_Reference.mat','Uei'); nUei = Uei;
clearvars Uei
assert(isequaln(oUei,nUei),'Uei Test: FAIL')
% ===========================================================================================================================================================================================================================
% -- check if Uer is the same 
% ===========================================================================================================================================================================================================================
%% Test: Uer
load('Old_1_ref.mat','Uer'); oUer = Uer;
load('New_Reference.mat','Uer'); nUer = Uer;
clearvars dely
assert(isequaln(oUer,nUer),'Uer Test: FAIL')
% ===========================================================================================================================================================================================================================
% -- check if waveang is the same 
% ===========================================================================================================================================================================================================================
%% Test: waveang
load('Old_1_ref.mat','waveang'); owaveang = waveang;
load('New_Reference.mat','waveang'); nwaveang = waveang; 
clearvars waveang
assert(isequaln(owaveang,nwaveang),'waveang Test: FAIL')
% ===========================================================================================================================================================================================================================
% -- check if dthd is same
% ===========================================================================================================================================================================================================================
%% Test: dthd
load('Old_1_ref.mat','dthd'); odthd = dthd;
load('New_Reference.mat','dthd'); ndthd = dthd; 
clearvars dthd
assert(isequaln(odthd,ndthd),'dthd test: FAIL')
% ===========================================================================================================================================================================================================================
% -- check if dthd is same
% ============================================================================================================================================================================================================================
%% Test: dr
load('Old_1_ref.mat','dr'); odr = dr;
load('New_Reference.mat','dr'); ndr = dr; 
clearvars dr
assert(isequaln(odr,ndr),'dr test: FAIL')
% ============================================================================================================================================================================================================================
% ============================================================================================================================================================================================================================
